; ModuleID = 'Decaf compiler jit'

@a = common global i32 0
@b = common global i32 0
@fac = common global i32 0
@0 = private unnamed_addr constant [3 x i8] c"%d\00"

define void @main() {
entry:
  store i32 6, i32* @a
  store i32 1, i32* @fac
  br label %L1

L1:                                               ; preds = %L1, %entry
  %0 = load i32, i32* @fac
  %1 = load i32, i32* @a
  %multmp = mul i32 %0, %1
  store i32 %multmp, i32* @fac
  %2 = load i32, i32* @a
  %subtmp = sub i32 %2, 1
  store i32 %subtmp, i32* @a
  %3 = load i32, i32* @a
  %gecomparetmp = icmp uge i32 %3, 1
  br i1 %gecomparetmp, label %L1, label %aftergoto

aftergoto:                                        ; preds = %L1
  %4 = load i32, i32* @fac
  %printfCall = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @0, i32 0, i32 0), i32 %4)
  ret void
}

declare i32 @printf(i8*, ...)
