Terminals unused in grammar

   declaration_list
   statement_list
   ETOK
   COMPARE


Grammar

    0 $accept: program $end

    1 program: DECLBLOCK '{' decl_blocks '}' CODEBLOCK '{' code_blocks '}'

    2 decl_blocks: %empty
    3            | decl_blocks decl_block ';'

    4 decl_block: INT variables

    5 variables: variable
    6          | variables ',' variable

    7 variable: IDENTIFIER
    8         | ARRAY

    9 code_blocks: %empty
   10            | code_blocks code_block

   11 code_block: PRINT thingps ';'
   12           | READ thingrs ';'
   13           | expr ';'
   14           | IF conds '{' code_blocks '}'
   15           | IF conds '{' code_blocks '}' ELSE '{' code_blocks '}'
   16           | WHILE conds '{' code_blocks '}'
   17           | FOR forloop '{' code_blocks '}'
   18           | LABEL GOTO IDENTIFIER call ';'

   19 thingps: thingp
   20        | thingps ',' thingp

   21 thingp: IDENTIFIER
   22       | NUMBER
   23       | ARRAY
   24       | STRING

   25 thingrs: thingr
   26        | thingrs ',' thingr

   27 thingr: IDENTIFIER
   28       | NUMBER
   29       | ARRAY

   30 expr: IDENTIFIER '=' exprnew
   31     | ARRAY '=' exprnew

   32 exprnew: arithmetic
   33        | IDENTIFIER
   34        | NUMBER
   35        | ARRAY

   36 arithmetic: exprnew ADD exprnew
   37           | exprnew SUB exprnew
   38           | exprnew DIV exprnew
   39           | exprnew MUL exprnew

   40 conds: %empty
   41      | conds andor cond

   42 cond: exprnew compare exprnew

   43 compare: GT
   44        | LT
   45        | GTE
   46        | LTE
   47        | EE

   48 andor: %empty
   49      | AND
   50      | OR

   51 forloop: IDENTIFIER '=' NUMBER ',' NUMBER inc

   52 inc: %empty
   53    | ',' NUMBER

   54 call: %empty
   55     | IF conds


Terminals, with rules where they appear

$end (0) 0
',' (44) 6 20 26 51 53
';' (59) 3 11 12 13 18
'=' (61) 30 31 51
'{' (123) 1 14 15 16 17
'}' (125) 1 14 15 16 17
error (256)
declaration_list (258)
ADD (259) 36
SUB (260) 37
MUL (261) 39
DIV (262) 38
DECLBLOCK (263) 1
statement_list (264)
NUMBER (265) 22 28 34 51 53
IDENTIFIER (266) 7 18 21 27 30 33 51
ETOK (267)
INT (268) 4
ARRAY (269) 8 23 29 31 35
PRINT (270) 11
STRING (271) 24
CODEBLOCK (272) 1
READ (273) 12
IF (274) 14 15 55
ELSE (275) 15
COMPARE (276)
EE (277) 47
GT (278) 43
LT (279) 44
GTE (280) 45
LTE (281) 46
AND (282) 49
OR (283) 50
WHILE (284) 16
FOR (285) 17
LABEL (286) 18
GOTO (287) 18


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1, on right: 0
decl_blocks (40)
    on left: 2 3, on right: 1 3
decl_block (41)
    on left: 4, on right: 3
variables (42)
    on left: 5 6, on right: 4 6
variable (43)
    on left: 7 8, on right: 5 6
code_blocks (44)
    on left: 9 10, on right: 1 10 14 15 16 17
code_block (45)
    on left: 11 12 13 14 15 16 17 18, on right: 10
thingps (46)
    on left: 19 20, on right: 11 20
thingp (47)
    on left: 21 22 23 24, on right: 19 20
thingrs (48)
    on left: 25 26, on right: 12 26
thingr (49)
    on left: 27 28 29, on right: 25 26
expr (50)
    on left: 30 31, on right: 13
exprnew (51)
    on left: 32 33 34 35, on right: 30 31 36 37 38 39 42
arithmetic (52)
    on left: 36 37 38 39, on right: 32
conds (53)
    on left: 40 41, on right: 14 15 16 41 55
cond (54)
    on left: 42, on right: 41
compare (55)
    on left: 43 44 45 46 47, on right: 42
andor (56)
    on left: 48 49 50, on right: 41
forloop (57)
    on left: 51, on right: 17
inc (58)
    on left: 52 53, on right: 51
call (59)
    on left: 54 55, on right: 18


State 0

    0 $accept: . program $end

    DECLBLOCK  shift, and go to state 1

    program  go to state 2


State 1

    1 program: DECLBLOCK . '{' decl_blocks '}' CODEBLOCK '{' code_blocks '}'

    '{'  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: DECLBLOCK '{' . decl_blocks '}' CODEBLOCK '{' code_blocks '}'

    $default  reduce using rule 2 (decl_blocks)

    decl_blocks  go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: DECLBLOCK '{' decl_blocks . '}' CODEBLOCK '{' code_blocks '}'
    3 decl_blocks: decl_blocks . decl_block ';'

    INT  shift, and go to state 6
    '}'  shift, and go to state 7

    decl_block  go to state 8


State 6

    4 decl_block: INT . variables

    IDENTIFIER  shift, and go to state 9
    ARRAY       shift, and go to state 10

    variables  go to state 11
    variable   go to state 12


State 7

    1 program: DECLBLOCK '{' decl_blocks '}' . CODEBLOCK '{' code_blocks '}'

    CODEBLOCK  shift, and go to state 13


State 8

    3 decl_blocks: decl_blocks decl_block . ';'

    ';'  shift, and go to state 14


State 9

    7 variable: IDENTIFIER .

    $default  reduce using rule 7 (variable)


State 10

    8 variable: ARRAY .

    $default  reduce using rule 8 (variable)


State 11

    4 decl_block: INT variables .
    6 variables: variables . ',' variable

    ','  shift, and go to state 15

    $default  reduce using rule 4 (decl_block)


State 12

    5 variables: variable .

    $default  reduce using rule 5 (variables)


State 13

    1 program: DECLBLOCK '{' decl_blocks '}' CODEBLOCK . '{' code_blocks '}'

    '{'  shift, and go to state 16


State 14

    3 decl_blocks: decl_blocks decl_block ';' .

    $default  reduce using rule 3 (decl_blocks)


State 15

    6 variables: variables ',' . variable

    IDENTIFIER  shift, and go to state 9
    ARRAY       shift, and go to state 10

    variable  go to state 17


State 16

    1 program: DECLBLOCK '{' decl_blocks '}' CODEBLOCK '{' . code_blocks '}'

    $default  reduce using rule 9 (code_blocks)

    code_blocks  go to state 18


State 17

    6 variables: variables ',' variable .

    $default  reduce using rule 6 (variables)


State 18

    1 program: DECLBLOCK '{' decl_blocks '}' CODEBLOCK '{' code_blocks . '}'
   10 code_blocks: code_blocks . code_block

    IDENTIFIER  shift, and go to state 19
    ARRAY       shift, and go to state 20
    PRINT       shift, and go to state 21
    READ        shift, and go to state 22
    IF          shift, and go to state 23
    WHILE       shift, and go to state 24
    FOR         shift, and go to state 25
    LABEL       shift, and go to state 26
    '}'         shift, and go to state 27

    code_block  go to state 28
    expr        go to state 29


State 19

   30 expr: IDENTIFIER . '=' exprnew

    '='  shift, and go to state 30


State 20

   31 expr: ARRAY . '=' exprnew

    '='  shift, and go to state 31


State 21

   11 code_block: PRINT . thingps ';'

    NUMBER      shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    ARRAY       shift, and go to state 34
    STRING      shift, and go to state 35

    thingps  go to state 36
    thingp   go to state 37


State 22

   12 code_block: READ . thingrs ';'

    NUMBER      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    ARRAY       shift, and go to state 40

    thingrs  go to state 41
    thingr   go to state 42


State 23

   14 code_block: IF . conds '{' code_blocks '}'
   15           | IF . conds '{' code_blocks '}' ELSE '{' code_blocks '}'

    $default  reduce using rule 40 (conds)

    conds  go to state 43


State 24

   16 code_block: WHILE . conds '{' code_blocks '}'

    $default  reduce using rule 40 (conds)

    conds  go to state 44


State 25

   17 code_block: FOR . forloop '{' code_blocks '}'

    IDENTIFIER  shift, and go to state 45

    forloop  go to state 46


State 26

   18 code_block: LABEL . GOTO IDENTIFIER call ';'

    GOTO  shift, and go to state 47


State 27

    1 program: DECLBLOCK '{' decl_blocks '}' CODEBLOCK '{' code_blocks '}' .

    $default  reduce using rule 1 (program)


State 28

   10 code_blocks: code_blocks code_block .

    $default  reduce using rule 10 (code_blocks)


State 29

   13 code_block: expr . ';'

    ';'  shift, and go to state 48


State 30

   30 expr: IDENTIFIER '=' . exprnew

    NUMBER      shift, and go to state 49
    IDENTIFIER  shift, and go to state 50
    ARRAY       shift, and go to state 51

    exprnew     go to state 52
    arithmetic  go to state 53


State 31

   31 expr: ARRAY '=' . exprnew

    NUMBER      shift, and go to state 49
    IDENTIFIER  shift, and go to state 50
    ARRAY       shift, and go to state 51

    exprnew     go to state 54
    arithmetic  go to state 53


State 32

   22 thingp: NUMBER .

    $default  reduce using rule 22 (thingp)


State 33

   21 thingp: IDENTIFIER .

    $default  reduce using rule 21 (thingp)


State 34

   23 thingp: ARRAY .

    $default  reduce using rule 23 (thingp)


State 35

   24 thingp: STRING .

    $default  reduce using rule 24 (thingp)


State 36

   11 code_block: PRINT thingps . ';'
   20 thingps: thingps . ',' thingp

    ';'  shift, and go to state 55
    ','  shift, and go to state 56


State 37

   19 thingps: thingp .

    $default  reduce using rule 19 (thingps)


State 38

   28 thingr: NUMBER .

    $default  reduce using rule 28 (thingr)


State 39

   27 thingr: IDENTIFIER .

    $default  reduce using rule 27 (thingr)


State 40

   29 thingr: ARRAY .

    $default  reduce using rule 29 (thingr)


State 41

   12 code_block: READ thingrs . ';'
   26 thingrs: thingrs . ',' thingr

    ';'  shift, and go to state 57
    ','  shift, and go to state 58


State 42

   25 thingrs: thingr .

    $default  reduce using rule 25 (thingrs)


State 43

   14 code_block: IF conds . '{' code_blocks '}'
   15           | IF conds . '{' code_blocks '}' ELSE '{' code_blocks '}'
   41 conds: conds . andor cond

    AND  shift, and go to state 59
    OR   shift, and go to state 60
    '{'  shift, and go to state 61

    $default  reduce using rule 48 (andor)

    andor  go to state 62


State 44

   16 code_block: WHILE conds . '{' code_blocks '}'
   41 conds: conds . andor cond

    AND  shift, and go to state 59
    OR   shift, and go to state 60
    '{'  shift, and go to state 63

    $default  reduce using rule 48 (andor)

    andor  go to state 62


State 45

   51 forloop: IDENTIFIER . '=' NUMBER ',' NUMBER inc

    '='  shift, and go to state 64


State 46

   17 code_block: FOR forloop . '{' code_blocks '}'

    '{'  shift, and go to state 65


State 47

   18 code_block: LABEL GOTO . IDENTIFIER call ';'

    IDENTIFIER  shift, and go to state 66


State 48

   13 code_block: expr ';' .

    $default  reduce using rule 13 (code_block)


State 49

   34 exprnew: NUMBER .

    $default  reduce using rule 34 (exprnew)


State 50

   33 exprnew: IDENTIFIER .

    $default  reduce using rule 33 (exprnew)


State 51

   35 exprnew: ARRAY .

    $default  reduce using rule 35 (exprnew)


State 52

   30 expr: IDENTIFIER '=' exprnew .
   36 arithmetic: exprnew . ADD exprnew
   37           | exprnew . SUB exprnew
   38           | exprnew . DIV exprnew
   39           | exprnew . MUL exprnew

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68
    MUL  shift, and go to state 69
    DIV  shift, and go to state 70

    $default  reduce using rule 30 (expr)


State 53

   32 exprnew: arithmetic .

    $default  reduce using rule 32 (exprnew)


State 54

   31 expr: ARRAY '=' exprnew .
   36 arithmetic: exprnew . ADD exprnew
   37           | exprnew . SUB exprnew
   38           | exprnew . DIV exprnew
   39           | exprnew . MUL exprnew

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68
    MUL  shift, and go to state 69
    DIV  shift, and go to state 70

    $default  reduce using rule 31 (expr)


State 55

   11 code_block: PRINT thingps ';' .

    $default  reduce using rule 11 (code_block)


State 56

   20 thingps: thingps ',' . thingp

    NUMBER      shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    ARRAY       shift, and go to state 34
    STRING      shift, and go to state 35

    thingp  go to state 71


State 57

   12 code_block: READ thingrs ';' .

    $default  reduce using rule 12 (code_block)


State 58

   26 thingrs: thingrs ',' . thingr

    NUMBER      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    ARRAY       shift, and go to state 40

    thingr  go to state 72


State 59

   49 andor: AND .

    $default  reduce using rule 49 (andor)


State 60

   50 andor: OR .

    $default  reduce using rule 50 (andor)


State 61

   14 code_block: IF conds '{' . code_blocks '}'
   15           | IF conds '{' . code_blocks '}' ELSE '{' code_blocks '}'

    $default  reduce using rule 9 (code_blocks)

    code_blocks  go to state 73


State 62

   41 conds: conds andor . cond

    NUMBER      shift, and go to state 49
    IDENTIFIER  shift, and go to state 50
    ARRAY       shift, and go to state 51

    exprnew     go to state 74
    arithmetic  go to state 53
    cond        go to state 75


State 63

   16 code_block: WHILE conds '{' . code_blocks '}'

    $default  reduce using rule 9 (code_blocks)

    code_blocks  go to state 76


State 64

   51 forloop: IDENTIFIER '=' . NUMBER ',' NUMBER inc

    NUMBER  shift, and go to state 77


State 65

   17 code_block: FOR forloop '{' . code_blocks '}'

    $default  reduce using rule 9 (code_blocks)

    code_blocks  go to state 78


State 66

   18 code_block: LABEL GOTO IDENTIFIER . call ';'

    IF  shift, and go to state 79

    $default  reduce using rule 54 (call)

    call  go to state 80


State 67

   36 arithmetic: exprnew ADD . exprnew

    NUMBER      shift, and go to state 49
    IDENTIFIER  shift, and go to state 50
    ARRAY       shift, and go to state 51

    exprnew     go to state 81
    arithmetic  go to state 53


State 68

   37 arithmetic: exprnew SUB . exprnew

    NUMBER      shift, and go to state 49
    IDENTIFIER  shift, and go to state 50
    ARRAY       shift, and go to state 51

    exprnew     go to state 82
    arithmetic  go to state 53


State 69

   39 arithmetic: exprnew MUL . exprnew

    NUMBER      shift, and go to state 49
    IDENTIFIER  shift, and go to state 50
    ARRAY       shift, and go to state 51

    exprnew     go to state 83
    arithmetic  go to state 53


State 70

   38 arithmetic: exprnew DIV . exprnew

    NUMBER      shift, and go to state 49
    IDENTIFIER  shift, and go to state 50
    ARRAY       shift, and go to state 51

    exprnew     go to state 84
    arithmetic  go to state 53


State 71

   20 thingps: thingps ',' thingp .

    $default  reduce using rule 20 (thingps)


State 72

   26 thingrs: thingrs ',' thingr .

    $default  reduce using rule 26 (thingrs)


State 73

   10 code_blocks: code_blocks . code_block
   14 code_block: IF conds '{' code_blocks . '}'
   15           | IF conds '{' code_blocks . '}' ELSE '{' code_blocks '}'

    IDENTIFIER  shift, and go to state 19
    ARRAY       shift, and go to state 20
    PRINT       shift, and go to state 21
    READ        shift, and go to state 22
    IF          shift, and go to state 23
    WHILE       shift, and go to state 24
    FOR         shift, and go to state 25
    LABEL       shift, and go to state 26
    '}'         shift, and go to state 85

    code_block  go to state 28
    expr        go to state 29


State 74

   36 arithmetic: exprnew . ADD exprnew
   37           | exprnew . SUB exprnew
   38           | exprnew . DIV exprnew
   39           | exprnew . MUL exprnew
   42 cond: exprnew . compare exprnew

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68
    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    EE   shift, and go to state 86
    GT   shift, and go to state 87
    LT   shift, and go to state 88
    GTE  shift, and go to state 89
    LTE  shift, and go to state 90

    compare  go to state 91


State 75

   41 conds: conds andor cond .

    $default  reduce using rule 41 (conds)


State 76

   10 code_blocks: code_blocks . code_block
   16 code_block: WHILE conds '{' code_blocks . '}'

    IDENTIFIER  shift, and go to state 19
    ARRAY       shift, and go to state 20
    PRINT       shift, and go to state 21
    READ        shift, and go to state 22
    IF          shift, and go to state 23
    WHILE       shift, and go to state 24
    FOR         shift, and go to state 25
    LABEL       shift, and go to state 26
    '}'         shift, and go to state 92

    code_block  go to state 28
    expr        go to state 29


State 77

   51 forloop: IDENTIFIER '=' NUMBER . ',' NUMBER inc

    ','  shift, and go to state 93


State 78

   10 code_blocks: code_blocks . code_block
   17 code_block: FOR forloop '{' code_blocks . '}'

    IDENTIFIER  shift, and go to state 19
    ARRAY       shift, and go to state 20
    PRINT       shift, and go to state 21
    READ        shift, and go to state 22
    IF          shift, and go to state 23
    WHILE       shift, and go to state 24
    FOR         shift, and go to state 25
    LABEL       shift, and go to state 26
    '}'         shift, and go to state 94

    code_block  go to state 28
    expr        go to state 29


State 79

   55 call: IF . conds

    $default  reduce using rule 40 (conds)

    conds  go to state 95


State 80

   18 code_block: LABEL GOTO IDENTIFIER call . ';'

    ';'  shift, and go to state 96


State 81

   36 arithmetic: exprnew . ADD exprnew
   36           | exprnew ADD exprnew .
   37           | exprnew . SUB exprnew
   38           | exprnew . DIV exprnew
   39           | exprnew . MUL exprnew

    SUB  shift, and go to state 68
    MUL  shift, and go to state 69
    DIV  shift, and go to state 70

    $default  reduce using rule 36 (arithmetic)


State 82

   36 arithmetic: exprnew . ADD exprnew
   37           | exprnew . SUB exprnew
   37           | exprnew SUB exprnew .
   38           | exprnew . DIV exprnew
   39           | exprnew . MUL exprnew

    $default  reduce using rule 37 (arithmetic)


State 83

   36 arithmetic: exprnew . ADD exprnew
   37           | exprnew . SUB exprnew
   38           | exprnew . DIV exprnew
   39           | exprnew . MUL exprnew
   39           | exprnew MUL exprnew .

    SUB  shift, and go to state 68
    DIV  shift, and go to state 70

    $default  reduce using rule 39 (arithmetic)


State 84

   36 arithmetic: exprnew . ADD exprnew
   37           | exprnew . SUB exprnew
   38           | exprnew . DIV exprnew
   38           | exprnew DIV exprnew .
   39           | exprnew . MUL exprnew

    SUB  shift, and go to state 68

    $default  reduce using rule 38 (arithmetic)


State 85

   14 code_block: IF conds '{' code_blocks '}' .
   15           | IF conds '{' code_blocks '}' . ELSE '{' code_blocks '}'

    ELSE  shift, and go to state 97

    $default  reduce using rule 14 (code_block)


State 86

   47 compare: EE .

    $default  reduce using rule 47 (compare)


State 87

   43 compare: GT .

    $default  reduce using rule 43 (compare)


State 88

   44 compare: LT .

    $default  reduce using rule 44 (compare)


State 89

   45 compare: GTE .

    $default  reduce using rule 45 (compare)


State 90

   46 compare: LTE .

    $default  reduce using rule 46 (compare)


State 91

   42 cond: exprnew compare . exprnew

    NUMBER      shift, and go to state 49
    IDENTIFIER  shift, and go to state 50
    ARRAY       shift, and go to state 51

    exprnew     go to state 98
    arithmetic  go to state 53


State 92

   16 code_block: WHILE conds '{' code_blocks '}' .

    $default  reduce using rule 16 (code_block)


State 93

   51 forloop: IDENTIFIER '=' NUMBER ',' . NUMBER inc

    NUMBER  shift, and go to state 99


State 94

   17 code_block: FOR forloop '{' code_blocks '}' .

    $default  reduce using rule 17 (code_block)


State 95

   41 conds: conds . andor cond
   55 call: IF conds .

    AND  shift, and go to state 59
    OR   shift, and go to state 60

    ';'       reduce using rule 55 (call)
    $default  reduce using rule 48 (andor)

    andor  go to state 62


State 96

   18 code_block: LABEL GOTO IDENTIFIER call ';' .

    $default  reduce using rule 18 (code_block)


State 97

   15 code_block: IF conds '{' code_blocks '}' ELSE . '{' code_blocks '}'

    '{'  shift, and go to state 100


State 98

   36 arithmetic: exprnew . ADD exprnew
   37           | exprnew . SUB exprnew
   38           | exprnew . DIV exprnew
   39           | exprnew . MUL exprnew
   42 cond: exprnew compare exprnew .

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68
    MUL  shift, and go to state 69
    DIV  shift, and go to state 70

    $default  reduce using rule 42 (cond)


State 99

   51 forloop: IDENTIFIER '=' NUMBER ',' NUMBER . inc

    ','  shift, and go to state 101

    $default  reduce using rule 52 (inc)

    inc  go to state 102


State 100

   15 code_block: IF conds '{' code_blocks '}' ELSE '{' . code_blocks '}'

    $default  reduce using rule 9 (code_blocks)

    code_blocks  go to state 103


State 101

   53 inc: ',' . NUMBER

    NUMBER  shift, and go to state 104


State 102

   51 forloop: IDENTIFIER '=' NUMBER ',' NUMBER inc .

    $default  reduce using rule 51 (forloop)


State 103

   10 code_blocks: code_blocks . code_block
   15 code_block: IF conds '{' code_blocks '}' ELSE '{' code_blocks . '}'

    IDENTIFIER  shift, and go to state 19
    ARRAY       shift, and go to state 20
    PRINT       shift, and go to state 21
    READ        shift, and go to state 22
    IF          shift, and go to state 23
    WHILE       shift, and go to state 24
    FOR         shift, and go to state 25
    LABEL       shift, and go to state 26
    '}'         shift, and go to state 105

    code_block  go to state 28
    expr        go to state 29


State 104

   53 inc: ',' NUMBER .

    $default  reduce using rule 53 (inc)


State 105

   15 code_block: IF conds '{' code_blocks '}' ELSE '{' code_blocks '}' .

    $default  reduce using rule 15 (code_block)
