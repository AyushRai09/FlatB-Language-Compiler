Terminals unused in grammar

   declaration_list
   statement_list
   ETOK
   COMPARE
   '+'
   '*'
   '/'
   '-'


State 94 conflicts: 4 shift/reduce
State 95 conflicts: 4 shift/reduce
State 96 conflicts: 4 shift/reduce
State 97 conflicts: 4 shift/reduce


Grammar

    0 $accept: program $end

    1 program: DECLBLOCK '{' decl_blocks '}' CODEBLOCK '{' code_blocks '}'

    2 decl_blocks: %empty
    3            | decl_blocks decl_block ';'

    4 decl_block: %empty
    5           | decl_block INT variables

    6 variables: variable
    7          | variables ',' variable

    8 variable: IDENTIFIER
    9         | ARRAY

   10 code_blocks: %empty
   11            | code_blocks code_block

   12 code_block: print ';'
   13           | read ';'
   14           | expr ';'
   15           | IF conds '{' code_blocks '}'
   16           | IF conds '{' code_blocks '}' ELSE '{' code_blocks '}'
   17           | WHILE conds '{' code_blocks '}'
   18           | FOR forloop '{' code_blocks '}'
   19           | LABEL GOTO IDENTIFIER call ';'

   20 print: PRINT things

   21 things: IDENTIFIER
   22       | NUMBER
   23       | ARRAY
   24       | IDENTIFIER ',' things
   25       | NUMBER ',' things
   26       | ARRAY ',' things
   27       | STRING ',' things

   28 read: READ thingsr

   29 thingsr: IDENTIFIER
   30        | NUMBER
   31        | ARRAY
   32        | IDENTIFIER ',' thingsr
   33        | NUMBER ',' thingsr
   34        | ARRAY ',' thingsr

   35 expr: IDENTIFIER '=' exprnew
   36     | ARRAY '=' exprnew

   37 exprnew: arithmetic
   38        | IDENTIFIER
   39        | NUMBER
   40        | ARRAY

   41 arithmetic: exprnew ADD exprnew
   42           | exprnew SUB exprnew
   43           | exprnew DIV exprnew
   44           | exprnew MUL exprnew

   45 conds: %empty
   46      | conds cond

   47 cond: exprnew compare exprnew andor

   48 compare: GT
   49        | LT
   50        | GTE
   51        | LTE
   52        | EE

   53 andor: %empty
   54      | AND
   55      | OR

   56 forloop: IDENTIFIER '=' NUMBER ',' NUMBER inc

   57 inc: %empty
   58    | ',' NUMBER

   59 call: %empty
   60     | IF conds


Terminals, with rules where they appear

$end (0) 0
'*' (42)
'+' (43)
',' (44) 7 24 25 26 27 32 33 34 56 58
'-' (45)
'/' (47)
';' (59) 3 12 13 14 19
'=' (61) 35 36 56
'{' (123) 1 15 16 17 18
'}' (125) 1 15 16 17 18
error (256)
declaration_list (258)
ADD (259) 41
SUB (260) 42
MUL (261) 44
DIV (262) 43
DECLBLOCK (263) 1
statement_list (264)
NUMBER (265) 22 25 30 33 39 56 58
IDENTIFIER (266) 8 19 21 24 29 32 35 38 56
ETOK (267)
INT (268) 5
ARRAY (269) 9 23 26 31 34 36 40
PRINT (270) 20
STRING (271) 27
CODEBLOCK (272) 1
READ (273) 28
IF (274) 15 16 60
ELSE (275) 16
COMPARE (276)
EE (277) 52
GT (278) 48
LT (279) 49
GTE (280) 50
LTE (281) 51
AND (282) 54
OR (283) 55
WHILE (284) 17
FOR (285) 18
LABEL (286) 19
GOTO (287) 19


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1, on right: 0
decl_blocks (44)
    on left: 2 3, on right: 1 3
decl_block (45)
    on left: 4 5, on right: 3 5
variables (46)
    on left: 6 7, on right: 5 7
variable (47)
    on left: 8 9, on right: 6 7
code_blocks (48)
    on left: 10 11, on right: 1 11 15 16 17 18
code_block (49)
    on left: 12 13 14 15 16 17 18 19, on right: 11
print (50)
    on left: 20, on right: 12
things (51)
    on left: 21 22 23 24 25 26 27, on right: 20 24 25 26 27
read (52)
    on left: 28, on right: 13
thingsr (53)
    on left: 29 30 31 32 33 34, on right: 28 32 33 34
expr (54)
    on left: 35 36, on right: 14
exprnew (55)
    on left: 37 38 39 40, on right: 35 36 41 42 43 44 47
arithmetic (56)
    on left: 41 42 43 44, on right: 37
conds (57)
    on left: 45 46, on right: 15 16 17 46 60
cond (58)
    on left: 47, on right: 46
compare (59)
    on left: 48 49 50 51 52, on right: 47
andor (60)
    on left: 53 54 55, on right: 47
forloop (61)
    on left: 56, on right: 18
inc (62)
    on left: 57 58, on right: 56
call (63)
    on left: 59 60, on right: 19


State 0

    0 $accept: . program $end

    DECLBLOCK  shift, and go to state 1

    program  go to state 2


State 1

    1 program: DECLBLOCK . '{' decl_blocks '}' CODEBLOCK '{' code_blocks '}'

    '{'  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: DECLBLOCK '{' . decl_blocks '}' CODEBLOCK '{' code_blocks '}'

    $default  reduce using rule 2 (decl_blocks)

    decl_blocks  go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: DECLBLOCK '{' decl_blocks . '}' CODEBLOCK '{' code_blocks '}'
    3 decl_blocks: decl_blocks . decl_block ';'

    '}'  shift, and go to state 6

    $default  reduce using rule 4 (decl_block)

    decl_block  go to state 7


State 6

    1 program: DECLBLOCK '{' decl_blocks '}' . CODEBLOCK '{' code_blocks '}'

    CODEBLOCK  shift, and go to state 8


State 7

    3 decl_blocks: decl_blocks decl_block . ';'
    5 decl_block: decl_block . INT variables

    INT  shift, and go to state 9
    ';'  shift, and go to state 10


State 8

    1 program: DECLBLOCK '{' decl_blocks '}' CODEBLOCK . '{' code_blocks '}'

    '{'  shift, and go to state 11


State 9

    5 decl_block: decl_block INT . variables

    IDENTIFIER  shift, and go to state 12
    ARRAY       shift, and go to state 13

    variables  go to state 14
    variable   go to state 15


State 10

    3 decl_blocks: decl_blocks decl_block ';' .

    $default  reduce using rule 3 (decl_blocks)


State 11

    1 program: DECLBLOCK '{' decl_blocks '}' CODEBLOCK '{' . code_blocks '}'

    $default  reduce using rule 10 (code_blocks)

    code_blocks  go to state 16


State 12

    8 variable: IDENTIFIER .

    $default  reduce using rule 8 (variable)


State 13

    9 variable: ARRAY .

    $default  reduce using rule 9 (variable)


State 14

    5 decl_block: decl_block INT variables .
    7 variables: variables . ',' variable

    ','  shift, and go to state 17

    $default  reduce using rule 5 (decl_block)


State 15

    6 variables: variable .

    $default  reduce using rule 6 (variables)


State 16

    1 program: DECLBLOCK '{' decl_blocks '}' CODEBLOCK '{' code_blocks . '}'
   11 code_blocks: code_blocks . code_block

    IDENTIFIER  shift, and go to state 18
    ARRAY       shift, and go to state 19
    PRINT       shift, and go to state 20
    READ        shift, and go to state 21
    IF          shift, and go to state 22
    WHILE       shift, and go to state 23
    FOR         shift, and go to state 24
    LABEL       shift, and go to state 25
    '}'         shift, and go to state 26

    code_block  go to state 27
    print       go to state 28
    read        go to state 29
    expr        go to state 30


State 17

    7 variables: variables ',' . variable

    IDENTIFIER  shift, and go to state 12
    ARRAY       shift, and go to state 13

    variable  go to state 31


State 18

   35 expr: IDENTIFIER . '=' exprnew

    '='  shift, and go to state 32


State 19

   36 expr: ARRAY . '=' exprnew

    '='  shift, and go to state 33


State 20

   20 print: PRINT . things

    NUMBER      shift, and go to state 34
    IDENTIFIER  shift, and go to state 35
    ARRAY       shift, and go to state 36
    STRING      shift, and go to state 37

    things  go to state 38


State 21

   28 read: READ . thingsr

    NUMBER      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    ARRAY       shift, and go to state 41

    thingsr  go to state 42


State 22

   15 code_block: IF . conds '{' code_blocks '}'
   16           | IF . conds '{' code_blocks '}' ELSE '{' code_blocks '}'

    $default  reduce using rule 45 (conds)

    conds  go to state 43


State 23

   17 code_block: WHILE . conds '{' code_blocks '}'

    $default  reduce using rule 45 (conds)

    conds  go to state 44


State 24

   18 code_block: FOR . forloop '{' code_blocks '}'

    IDENTIFIER  shift, and go to state 45

    forloop  go to state 46


State 25

   19 code_block: LABEL . GOTO IDENTIFIER call ';'

    GOTO  shift, and go to state 47


State 26

    1 program: DECLBLOCK '{' decl_blocks '}' CODEBLOCK '{' code_blocks '}' .

    $default  reduce using rule 1 (program)


State 27

   11 code_blocks: code_blocks code_block .

    $default  reduce using rule 11 (code_blocks)


State 28

   12 code_block: print . ';'

    ';'  shift, and go to state 48


State 29

   13 code_block: read . ';'

    ';'  shift, and go to state 49


State 30

   14 code_block: expr . ';'

    ';'  shift, and go to state 50


State 31

    7 variables: variables ',' variable .

    $default  reduce using rule 7 (variables)


State 32

   35 expr: IDENTIFIER '=' . exprnew

    NUMBER      shift, and go to state 51
    IDENTIFIER  shift, and go to state 52
    ARRAY       shift, and go to state 53

    exprnew     go to state 54
    arithmetic  go to state 55


State 33

   36 expr: ARRAY '=' . exprnew

    NUMBER      shift, and go to state 51
    IDENTIFIER  shift, and go to state 52
    ARRAY       shift, and go to state 53

    exprnew     go to state 56
    arithmetic  go to state 55


State 34

   22 things: NUMBER .
   25       | NUMBER . ',' things

    ','  shift, and go to state 57

    $default  reduce using rule 22 (things)


State 35

   21 things: IDENTIFIER .
   24       | IDENTIFIER . ',' things

    ','  shift, and go to state 58

    $default  reduce using rule 21 (things)


State 36

   23 things: ARRAY .
   26       | ARRAY . ',' things

    ','  shift, and go to state 59

    $default  reduce using rule 23 (things)


State 37

   27 things: STRING . ',' things

    ','  shift, and go to state 60


State 38

   20 print: PRINT things .

    $default  reduce using rule 20 (print)


State 39

   30 thingsr: NUMBER .
   33        | NUMBER . ',' thingsr

    ','  shift, and go to state 61

    $default  reduce using rule 30 (thingsr)


State 40

   29 thingsr: IDENTIFIER .
   32        | IDENTIFIER . ',' thingsr

    ','  shift, and go to state 62

    $default  reduce using rule 29 (thingsr)


State 41

   31 thingsr: ARRAY .
   34        | ARRAY . ',' thingsr

    ','  shift, and go to state 63

    $default  reduce using rule 31 (thingsr)


State 42

   28 read: READ thingsr .

    $default  reduce using rule 28 (read)


State 43

   15 code_block: IF conds . '{' code_blocks '}'
   16           | IF conds . '{' code_blocks '}' ELSE '{' code_blocks '}'
   46 conds: conds . cond

    NUMBER      shift, and go to state 51
    IDENTIFIER  shift, and go to state 52
    ARRAY       shift, and go to state 53
    '{'         shift, and go to state 64

    exprnew     go to state 65
    arithmetic  go to state 55
    cond        go to state 66


State 44

   17 code_block: WHILE conds . '{' code_blocks '}'
   46 conds: conds . cond

    NUMBER      shift, and go to state 51
    IDENTIFIER  shift, and go to state 52
    ARRAY       shift, and go to state 53
    '{'         shift, and go to state 67

    exprnew     go to state 65
    arithmetic  go to state 55
    cond        go to state 66


State 45

   56 forloop: IDENTIFIER . '=' NUMBER ',' NUMBER inc

    '='  shift, and go to state 68


State 46

   18 code_block: FOR forloop . '{' code_blocks '}'

    '{'  shift, and go to state 69


State 47

   19 code_block: LABEL GOTO . IDENTIFIER call ';'

    IDENTIFIER  shift, and go to state 70


State 48

   12 code_block: print ';' .

    $default  reduce using rule 12 (code_block)


State 49

   13 code_block: read ';' .

    $default  reduce using rule 13 (code_block)


State 50

   14 code_block: expr ';' .

    $default  reduce using rule 14 (code_block)


State 51

   39 exprnew: NUMBER .

    $default  reduce using rule 39 (exprnew)


State 52

   38 exprnew: IDENTIFIER .

    $default  reduce using rule 38 (exprnew)


State 53

   40 exprnew: ARRAY .

    $default  reduce using rule 40 (exprnew)


State 54

   35 expr: IDENTIFIER '=' exprnew .
   41 arithmetic: exprnew . ADD exprnew
   42           | exprnew . SUB exprnew
   43           | exprnew . DIV exprnew
   44           | exprnew . MUL exprnew

    ADD  shift, and go to state 71
    SUB  shift, and go to state 72
    MUL  shift, and go to state 73
    DIV  shift, and go to state 74

    $default  reduce using rule 35 (expr)


State 55

   37 exprnew: arithmetic .

    $default  reduce using rule 37 (exprnew)


State 56

   36 expr: ARRAY '=' exprnew .
   41 arithmetic: exprnew . ADD exprnew
   42           | exprnew . SUB exprnew
   43           | exprnew . DIV exprnew
   44           | exprnew . MUL exprnew

    ADD  shift, and go to state 71
    SUB  shift, and go to state 72
    MUL  shift, and go to state 73
    DIV  shift, and go to state 74

    $default  reduce using rule 36 (expr)


State 57

   25 things: NUMBER ',' . things

    NUMBER      shift, and go to state 34
    IDENTIFIER  shift, and go to state 35
    ARRAY       shift, and go to state 36
    STRING      shift, and go to state 37

    things  go to state 75


State 58

   24 things: IDENTIFIER ',' . things

    NUMBER      shift, and go to state 34
    IDENTIFIER  shift, and go to state 35
    ARRAY       shift, and go to state 36
    STRING      shift, and go to state 37

    things  go to state 76


State 59

   26 things: ARRAY ',' . things

    NUMBER      shift, and go to state 34
    IDENTIFIER  shift, and go to state 35
    ARRAY       shift, and go to state 36
    STRING      shift, and go to state 37

    things  go to state 77


State 60

   27 things: STRING ',' . things

    NUMBER      shift, and go to state 34
    IDENTIFIER  shift, and go to state 35
    ARRAY       shift, and go to state 36
    STRING      shift, and go to state 37

    things  go to state 78


State 61

   33 thingsr: NUMBER ',' . thingsr

    NUMBER      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    ARRAY       shift, and go to state 41

    thingsr  go to state 79


State 62

   32 thingsr: IDENTIFIER ',' . thingsr

    NUMBER      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    ARRAY       shift, and go to state 41

    thingsr  go to state 80


State 63

   34 thingsr: ARRAY ',' . thingsr

    NUMBER      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    ARRAY       shift, and go to state 41

    thingsr  go to state 81


State 64

   15 code_block: IF conds '{' . code_blocks '}'
   16           | IF conds '{' . code_blocks '}' ELSE '{' code_blocks '}'

    $default  reduce using rule 10 (code_blocks)

    code_blocks  go to state 82


State 65

   41 arithmetic: exprnew . ADD exprnew
   42           | exprnew . SUB exprnew
   43           | exprnew . DIV exprnew
   44           | exprnew . MUL exprnew
   47 cond: exprnew . compare exprnew andor

    ADD  shift, and go to state 71
    SUB  shift, and go to state 72
    MUL  shift, and go to state 73
    DIV  shift, and go to state 74
    EE   shift, and go to state 83
    GT   shift, and go to state 84
    LT   shift, and go to state 85
    GTE  shift, and go to state 86
    LTE  shift, and go to state 87

    compare  go to state 88


State 66

   46 conds: conds cond .

    $default  reduce using rule 46 (conds)


State 67

   17 code_block: WHILE conds '{' . code_blocks '}'

    $default  reduce using rule 10 (code_blocks)

    code_blocks  go to state 89


State 68

   56 forloop: IDENTIFIER '=' . NUMBER ',' NUMBER inc

    NUMBER  shift, and go to state 90


State 69

   18 code_block: FOR forloop '{' . code_blocks '}'

    $default  reduce using rule 10 (code_blocks)

    code_blocks  go to state 91


State 70

   19 code_block: LABEL GOTO IDENTIFIER . call ';'

    IF  shift, and go to state 92

    $default  reduce using rule 59 (call)

    call  go to state 93


State 71

   41 arithmetic: exprnew ADD . exprnew

    NUMBER      shift, and go to state 51
    IDENTIFIER  shift, and go to state 52
    ARRAY       shift, and go to state 53

    exprnew     go to state 94
    arithmetic  go to state 55


State 72

   42 arithmetic: exprnew SUB . exprnew

    NUMBER      shift, and go to state 51
    IDENTIFIER  shift, and go to state 52
    ARRAY       shift, and go to state 53

    exprnew     go to state 95
    arithmetic  go to state 55


State 73

   44 arithmetic: exprnew MUL . exprnew

    NUMBER      shift, and go to state 51
    IDENTIFIER  shift, and go to state 52
    ARRAY       shift, and go to state 53

    exprnew     go to state 96
    arithmetic  go to state 55


State 74

   43 arithmetic: exprnew DIV . exprnew

    NUMBER      shift, and go to state 51
    IDENTIFIER  shift, and go to state 52
    ARRAY       shift, and go to state 53

    exprnew     go to state 97
    arithmetic  go to state 55


State 75

   25 things: NUMBER ',' things .

    $default  reduce using rule 25 (things)


State 76

   24 things: IDENTIFIER ',' things .

    $default  reduce using rule 24 (things)


State 77

   26 things: ARRAY ',' things .

    $default  reduce using rule 26 (things)


State 78

   27 things: STRING ',' things .

    $default  reduce using rule 27 (things)


State 79

   33 thingsr: NUMBER ',' thingsr .

    $default  reduce using rule 33 (thingsr)


State 80

   32 thingsr: IDENTIFIER ',' thingsr .

    $default  reduce using rule 32 (thingsr)


State 81

   34 thingsr: ARRAY ',' thingsr .

    $default  reduce using rule 34 (thingsr)


State 82

   11 code_blocks: code_blocks . code_block
   15 code_block: IF conds '{' code_blocks . '}'
   16           | IF conds '{' code_blocks . '}' ELSE '{' code_blocks '}'

    IDENTIFIER  shift, and go to state 18
    ARRAY       shift, and go to state 19
    PRINT       shift, and go to state 20
    READ        shift, and go to state 21
    IF          shift, and go to state 22
    WHILE       shift, and go to state 23
    FOR         shift, and go to state 24
    LABEL       shift, and go to state 25
    '}'         shift, and go to state 98

    code_block  go to state 27
    print       go to state 28
    read        go to state 29
    expr        go to state 30


State 83

   52 compare: EE .

    $default  reduce using rule 52 (compare)


State 84

   48 compare: GT .

    $default  reduce using rule 48 (compare)


State 85

   49 compare: LT .

    $default  reduce using rule 49 (compare)


State 86

   50 compare: GTE .

    $default  reduce using rule 50 (compare)


State 87

   51 compare: LTE .

    $default  reduce using rule 51 (compare)


State 88

   47 cond: exprnew compare . exprnew andor

    NUMBER      shift, and go to state 51
    IDENTIFIER  shift, and go to state 52
    ARRAY       shift, and go to state 53

    exprnew     go to state 99
    arithmetic  go to state 55


State 89

   11 code_blocks: code_blocks . code_block
   17 code_block: WHILE conds '{' code_blocks . '}'

    IDENTIFIER  shift, and go to state 18
    ARRAY       shift, and go to state 19
    PRINT       shift, and go to state 20
    READ        shift, and go to state 21
    IF          shift, and go to state 22
    WHILE       shift, and go to state 23
    FOR         shift, and go to state 24
    LABEL       shift, and go to state 25
    '}'         shift, and go to state 100

    code_block  go to state 27
    print       go to state 28
    read        go to state 29
    expr        go to state 30


State 90

   56 forloop: IDENTIFIER '=' NUMBER . ',' NUMBER inc

    ','  shift, and go to state 101


State 91

   11 code_blocks: code_blocks . code_block
   18 code_block: FOR forloop '{' code_blocks . '}'

    IDENTIFIER  shift, and go to state 18
    ARRAY       shift, and go to state 19
    PRINT       shift, and go to state 20
    READ        shift, and go to state 21
    IF          shift, and go to state 22
    WHILE       shift, and go to state 23
    FOR         shift, and go to state 24
    LABEL       shift, and go to state 25
    '}'         shift, and go to state 102

    code_block  go to state 27
    print       go to state 28
    read        go to state 29
    expr        go to state 30


State 92

   60 call: IF . conds

    $default  reduce using rule 45 (conds)

    conds  go to state 103


State 93

   19 code_block: LABEL GOTO IDENTIFIER call . ';'

    ';'  shift, and go to state 104


State 94

   41 arithmetic: exprnew . ADD exprnew
   41           | exprnew ADD exprnew .
   42           | exprnew . SUB exprnew
   43           | exprnew . DIV exprnew
   44           | exprnew . MUL exprnew

    ADD  shift, and go to state 71
    SUB  shift, and go to state 72
    MUL  shift, and go to state 73
    DIV  shift, and go to state 74

    ADD       [reduce using rule 41 (arithmetic)]
    SUB       [reduce using rule 41 (arithmetic)]
    MUL       [reduce using rule 41 (arithmetic)]
    DIV       [reduce using rule 41 (arithmetic)]
    $default  reduce using rule 41 (arithmetic)


State 95

   41 arithmetic: exprnew . ADD exprnew
   42           | exprnew . SUB exprnew
   42           | exprnew SUB exprnew .
   43           | exprnew . DIV exprnew
   44           | exprnew . MUL exprnew

    ADD  shift, and go to state 71
    SUB  shift, and go to state 72
    MUL  shift, and go to state 73
    DIV  shift, and go to state 74

    ADD       [reduce using rule 42 (arithmetic)]
    SUB       [reduce using rule 42 (arithmetic)]
    MUL       [reduce using rule 42 (arithmetic)]
    DIV       [reduce using rule 42 (arithmetic)]
    $default  reduce using rule 42 (arithmetic)


State 96

   41 arithmetic: exprnew . ADD exprnew
   42           | exprnew . SUB exprnew
   43           | exprnew . DIV exprnew
   44           | exprnew . MUL exprnew
   44           | exprnew MUL exprnew .

    ADD  shift, and go to state 71
    SUB  shift, and go to state 72
    MUL  shift, and go to state 73
    DIV  shift, and go to state 74

    ADD       [reduce using rule 44 (arithmetic)]
    SUB       [reduce using rule 44 (arithmetic)]
    MUL       [reduce using rule 44 (arithmetic)]
    DIV       [reduce using rule 44 (arithmetic)]
    $default  reduce using rule 44 (arithmetic)


State 97

   41 arithmetic: exprnew . ADD exprnew
   42           | exprnew . SUB exprnew
   43           | exprnew . DIV exprnew
   43           | exprnew DIV exprnew .
   44           | exprnew . MUL exprnew

    ADD  shift, and go to state 71
    SUB  shift, and go to state 72
    MUL  shift, and go to state 73
    DIV  shift, and go to state 74

    ADD       [reduce using rule 43 (arithmetic)]
    SUB       [reduce using rule 43 (arithmetic)]
    MUL       [reduce using rule 43 (arithmetic)]
    DIV       [reduce using rule 43 (arithmetic)]
    $default  reduce using rule 43 (arithmetic)


State 98

   15 code_block: IF conds '{' code_blocks '}' .
   16           | IF conds '{' code_blocks '}' . ELSE '{' code_blocks '}'

    ELSE  shift, and go to state 105

    $default  reduce using rule 15 (code_block)


State 99

   41 arithmetic: exprnew . ADD exprnew
   42           | exprnew . SUB exprnew
   43           | exprnew . DIV exprnew
   44           | exprnew . MUL exprnew
   47 cond: exprnew compare exprnew . andor

    ADD  shift, and go to state 71
    SUB  shift, and go to state 72
    MUL  shift, and go to state 73
    DIV  shift, and go to state 74
    AND  shift, and go to state 106
    OR   shift, and go to state 107

    $default  reduce using rule 53 (andor)

    andor  go to state 108


State 100

   17 code_block: WHILE conds '{' code_blocks '}' .

    $default  reduce using rule 17 (code_block)


State 101

   56 forloop: IDENTIFIER '=' NUMBER ',' . NUMBER inc

    NUMBER  shift, and go to state 109


State 102

   18 code_block: FOR forloop '{' code_blocks '}' .

    $default  reduce using rule 18 (code_block)


State 103

   46 conds: conds . cond
   60 call: IF conds .

    NUMBER      shift, and go to state 51
    IDENTIFIER  shift, and go to state 52
    ARRAY       shift, and go to state 53

    $default  reduce using rule 60 (call)

    exprnew     go to state 65
    arithmetic  go to state 55
    cond        go to state 66


State 104

   19 code_block: LABEL GOTO IDENTIFIER call ';' .

    $default  reduce using rule 19 (code_block)


State 105

   16 code_block: IF conds '{' code_blocks '}' ELSE . '{' code_blocks '}'

    '{'  shift, and go to state 110


State 106

   54 andor: AND .

    $default  reduce using rule 54 (andor)


State 107

   55 andor: OR .

    $default  reduce using rule 55 (andor)


State 108

   47 cond: exprnew compare exprnew andor .

    $default  reduce using rule 47 (cond)


State 109

   56 forloop: IDENTIFIER '=' NUMBER ',' NUMBER . inc

    ','  shift, and go to state 111

    $default  reduce using rule 57 (inc)

    inc  go to state 112


State 110

   16 code_block: IF conds '{' code_blocks '}' ELSE '{' . code_blocks '}'

    $default  reduce using rule 10 (code_blocks)

    code_blocks  go to state 113


State 111

   58 inc: ',' . NUMBER

    NUMBER  shift, and go to state 114


State 112

   56 forloop: IDENTIFIER '=' NUMBER ',' NUMBER inc .

    $default  reduce using rule 56 (forloop)


State 113

   11 code_blocks: code_blocks . code_block
   16 code_block: IF conds '{' code_blocks '}' ELSE '{' code_blocks . '}'

    IDENTIFIER  shift, and go to state 18
    ARRAY       shift, and go to state 19
    PRINT       shift, and go to state 20
    READ        shift, and go to state 21
    IF          shift, and go to state 22
    WHILE       shift, and go to state 23
    FOR         shift, and go to state 24
    LABEL       shift, and go to state 25
    '}'         shift, and go to state 115

    code_block  go to state 27
    print       go to state 28
    read        go to state 29
    expr        go to state 30


State 114

   58 inc: ',' NUMBER .

    $default  reduce using rule 58 (inc)


State 115

   16 code_block: IF conds '{' code_blocks '}' ELSE '{' code_blocks '}' .

    $default  reduce using rule 16 (code_block)
